{"version":3,"sources":["serviceWorker.js","components/Form.js","redux/actions/action.js","components/Database.js","components/Search.js","components/Searchform.js","components/PageContents.js","components/LinkButton.js","components/Topbar.js","App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","ConnectedForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","name","age","arrival","leave","gender","department","position","nameEmpty","nameAlertColor","wrongArrival","arrivalAlertColor","handleChange","bind","assertThisInitialized","handleSubmit","handleClear","event","target","value","type","checked","setState","defineProperty","preventDefault","_this$state","parseInt","addInfo","_this$state2","react_default","a","createElement","className","onSubmit","htmlFor","style","backgroundColor","onChange","onClick","React","Component","Form","connect","dispatch","info","DataBase","columns","sortBy","sortCase","order","sort","b","nameA","toUpperCase","nameB","sortTableState","sortTable","_ref","key","border","map","concat","width","sum","reduce","x","y","length","Search","ownProps","_ref2","selectedGender","filterGender","filter","selectedDepartment","filterDepartment","selectedPosition","filterPosition","selectedLocation","filterLocation","termFilterArray","lengthFilterArrayy","termStayEach","nameAll","locationAll","lengthArrayAll","termStayAverage","toFixed","lengthArrayFiltered","termStayFiltered","newLocation","lengthOfTokyo","array","lengthOfOsaka","lengthOfOverSeas","lengthOfOthers","newLocationAll","newLocationFiltered","SearchForm","components_Search","PageContents","Link","to","LinkButton","buttonName","Topbar","process","components_LinkButton","App","BrowserRouter","components_Topbar","Route","path","exact","component","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4a963f0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addInfo } from '../redux/actions/action';\n\nconst mapDispatchToProps = dispatch => ({\n  addInfo: info => dispatch(addInfo(info)),\n});\n\nclass ConnectedForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 4,\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n      nameEmpty: '',\n      nameAlertColor: '',\n      wrongArrival: '',\n      arrivalAlertColor: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n       id, name, age, gender, department, position, arrival, leave, location, nameEmpty, nameAlertColor, wrongArrival, arrivalAlertColor // eslint-disable-line\n    } = this.state;\n\n    age = parseInt(age, 10);\n    arrival = parseInt(arrival, 10);\n    leave = parseInt(leave, 10);\n    id += 1;\n    if (name === '') {\n      this.setState({\n        nameEmpty: 'Put in your Name',\n        nameAlertColor: 'red',\n        wrongArrival: '',\n        arrivalAlertColor: '',\n      });\n    } else if (arrival > leave) {\n      this.setState({\n        wrongArrival: 'Should be earlier than Leaving',\n        arrivalAlertColor: 'red',\n        nameEmpty: '',\n        nameAlertColor: '',\n      });\n    } else {\n      this.props.addInfo({  // eslint-disable-line\n        id, name, age, gender, department, position, arrival, leave, location,\n      });\n      this.setState({\n        id,\n        name: '',\n        age: 30,\n        arrival: 2010,\n        leave: 2010,\n        gender: 'Male',\n        department: 'Marketing',\n        position: 'Director',\n        location: 'Tokyo',\n        nameAlertColor: '',\n        nameEmpty: '',\n        wrongArrival: '',\n        arrivalAlertColor: '',\n      });\n    }\n  }\n\n  handleClear(event) {\n    event.preventDefault();\n    this.setState({\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n      nameAlertColor: '',\n      nameEmpty: '',\n      wrongArrival: '',\n      arrivalAlertColor: '',\n    });\n  }\n\n  render() {\n    const {\n      name,\n      age,\n      gender,\n      department,\n      position,\n      arrival,\n      leave,\n      location,\n      nameEmpty,\n      wrongArrival,\n      nameAlertColor,\n      arrivalAlertColor,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\" style={{ backgroundColor: nameAlertColor }}>\n          Name\n          <br />\n          {nameEmpty}\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            style={{ backgroundColor: nameAlertColor }}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"age\">\n          Age\n          <br />\n          <input\n            type=\"number\"\n            name=\"age\"\n            id=\"age\"\n            value={age}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"gender\"> {// eslint-disable-line\n        }\n          <br />\n          <select\n            id=\"gender\"\n            name=\"gender\"\n            onChange={this.handleChange}\n            value={gender}\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"department\"> {// eslint-disable-line\n        }\n          Department\n          <br />\n          <select id=\"department\" name=\"department\" onChange={this.handleChange} value={department}>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"position\"> {// eslint-disable-line\n        }\n          Position\n          <br />\n          <select id=\"position\" name=\"position\" onChange={this.handleChange} value={position}>\n            <option value=\"Director\">Director</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Chief\">Chief</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"arrival\" style={{ backgroundColor: arrivalAlertColor }}>\n          Arrival\n          <br />\n          {wrongArrival}\n          <input\n            type=\"number\"\n            id=\"arrival\"\n            name=\"arrival\"\n            value={arrival}\n            onChange={this.handleChange}\n            style={{ backgroundColor: arrivalAlertColor }}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"leave\">\n          Leaving\n          <br />\n          <input\n            type=\"number\"\n            id=\"leave\"\n            name=\"leave\"\n            value={leave}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"location\"> {// eslint-disable-line\n        }\n          Location\n          <br />\n          <select id=\"location\" name=\"location\" onChange={this.handleChange} value={location}>\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Osaka\">Osaka</option>\n            <option value=\"OverSeas\">OverSeas</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <button type=\"submit\" value=\"Send\">\n          Submit\n        </button>\n        <button type=\"button\" onClick={this.handleClear}>\n          Reset\n        </button>\n      </form>\n    );\n  }\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","export const ADD_INFO = 'ADD_INFO';\nexport const SORT_TABLE = 'SORT_TABLE';\n\nexport const addInfo = info => ({\n  type: ADD_INFO,\n  info,\n});\n\nexport const sortTable = (sortCase, order) => ({\n  type: SORT_TABLE,\n  sortCase,\n  order,\n});\n","/* eslint  no-shadow: 0 */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { sortTable } from '../redux/actions/action';\n\n// redux stateのsortTableの状態によって、ソートする。\nconst sortTableState = (state, sortBy) => {\n  switch (sortBy.sortCase) {\n    case 'ID':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.id - b.id);\n      }\n      return state.sort((a, b) => b.id - a.id);\n    case 'Name':\n      return state.sort((a, b) => {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Age':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.age - b.age);\n      }\n      return state.sort((a, b) => b.age - a.age);\n    case 'Gender':\n      return state.sort((a, b) => {\n        const nameA = a.gender.toUpperCase();\n        const nameB = b.gender.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Department':\n      return state.sort((a, b) => {\n        const nameA = a.department.toUpperCase();\n        const nameB = b.department.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Position':\n      return state.sort((a, b) => {\n        const nameA = a.position.toUpperCase();\n        const nameB = b.position.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Arrival':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.arrival - b.arrival);\n      }\n      return state.sort((a, b) => b.arrival - a.arrival);\n    case 'Leave':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.leave - b.leave);\n      }\n      return state.sort((a, b) => b.leave - a.leave);\n    case 'Location':\n      return state.sort((a, b) => {\n        const nameA = a.location.toUpperCase();\n        const nameB = b.location.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    default:\n      return state;\n  }\n};\n\nconst mapStateToProps = state => ({\n  columns: state.addInfo.columns,\n  info: sortTableState(state.addInfo.info, state.sortTable),\n  state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sortTable: (sortCase, order) => dispatch(sortTable(sortCase, order)),\n});\n\nconst ConnectedDataBase = ({\n  columns,\n  info,\n  sortTable,\n}) => (\n  <table className=\"database\">\n    <tbody>\n      <tr key=\"ascStr\" style={{ border: 'none' }}>\n        {columns.map(state => (\n          <td key={`asc${state}`} style={{ border: 'none' }}>\n            <button type=\"button\" style={{ width: 40 }} onClick={() => sortTable(state, 'asc')}>\n            ↓\n            </button>\n            <br />\n            <button type=\"button\" style={{ width: 40 }} onClick={() => sortTable(state, 'desc')}>\n            ↑\n            </button>\n          </td>\n        ))}\n      </tr>\n      <tr key=\"columnStr\">\n        {columns.map(state => (\n          <th key={`columnsth${state}`}>{state}</th>\n        ))}\n      </tr>\n      {info.map(state => (\n        <tr key={`tr${state.id}`}>\n          <td key={`id${state.id}`}>{state.id + 1}</td>\n          <td key={`name${state.id}`}>{state.name}</td>\n          <td key={`age${state.id}`}>{state.age}</td>\n          <td key={`gender${state.id}`}>{state.gender}</td>\n          <td key={`department${state.id}`}>{state.department}</td>\n          <td key={`position${state.id}`}>{state.position}</td>\n          <td key={`arrival${state.id}`}>{state.arrival}</td>\n          <td key={`leave${state.id}`}>{state.leave}</td>\n          <td key={`location${state.id}`}>{state.location}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nConnectedDataBase.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  info: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTable: PropTypes.func.isRequired,\n};\n\nconst DataBase = connect(mapStateToProps, mapDispatchToProps)(ConnectedDataBase);\n\nexport default DataBase;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = ({ addInfo }, ownProps) => ({\n  info: addInfo.info,\n  ownProps,\n});\n\nconst sum = a => a.reduce((x, y) => x + y, 0);\n\nconst length = a => a.reduce(() => a.length, 0);\n\nconst ConnectedSearch = ({ info, ownProps }) => {\n  // 男性か女性か\n  const selectedGender = ownProps.gender;\n\n  const filterGender = info.filter((value) => {\n    if (selectedGender !== 'all') {\n      return value.gender === selectedGender;\n    }\n    return value.gender;\n  });\n  // その中で部署はどこか\n  const selectedDepartment = ownProps.department;\n\n  const filterDepartment = filterGender.filter((value) => {\n    if (selectedDepartment !== 'all') {\n      return value.department === selectedDepartment;\n    }\n    return value.department;\n  });\n  // その中でポジションは何か\n  const selectedPosition = ownProps.position;\n\n  const filterPosition = filterDepartment.filter((value) => {\n    if (selectedPosition !== 'all') {\n      return value.position === selectedPosition;\n    }\n    return value.position;\n  });\n  // その中でロケーションはどこか\n  const selectedLocation = ownProps.location;\n\n  const filterLocation = filterPosition.filter((value) => {\n    if (selectedLocation !== 'all') {\n      return value.location === selectedLocation;\n    }\n    return value.location;\n  });\n\n  // 選択した部署のLeave - Arrival\n  const termFilterArray = filterPosition.map(a => a.leave - a.arrival);\n\n  // 選択した部署の配列のposition要素の羅列\n  const lengthFilterArrayy = filterPosition.map(a => a.position);\n\n  // 全員のLeave - arrivalの列挙\n  const termStayEach = info.map(a => a.leave - a.arrival);\n  // 全員の名前の列挙\n  const nameAll = info.map(a => a.name);\n  // 全員のLocationの列挙\n  const locationAll = info.map(a => a.location);\n  // 全員の配列の要素数\n  const lengthArrayAll = length(nameAll);\n  // 全員の平均勤続年数 = (全員のleave-arrivalの合計) / 該全員の配列の要素数\n  const termStayAverage = (sum(termStayEach) / lengthArrayAll)\n  === true ? (sum(termStayEach) / lengthArrayAll).toFixed(1) : 0;\n  // 全員の異動先毎の人数\n  const newLocationAll = () => {\n    const lengthOfTokyo = locationAll.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = locationAll.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = locationAll.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = locationAll.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n  // 該当者の配列の要素数\n  const lengthArrayFiltered = length(lengthFilterArrayy);\n  // 該当者の平均勤続年数 = (該当者のleave-arrivalの合計) / 該当者の配列の要素数\n  const termStayFiltered = (sum(termFilterArray) / lengthArrayFiltered)\n  === true ? (sum(termFilterArray) / lengthArrayFiltered).toFixed(1) : 0;\n\n  // 該当者の異動先の列挙\n  const newLocation = filterLocation.map(a => a.location);\n  // 該当者の異動先毎の人数\n  const newLocationFiltered = () => {\n    const lengthOfTokyo = newLocation.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = newLocation.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = newLocation.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = newLocation.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n\n  return (\n    <div className=\"searchresult\">\n      全人数 :\n      {' '}\n      {lengthArrayAll}\n      人\n      <br />\n      異動までの平均年数(全体) :\n      {' '}\n      {termStayAverage}\n      年\n      <br />\n      異動先(全体)\n      {' '}\n      {newLocationAll()}\n      <br />\n      <br />\n      該当者数 :\n      {' '}\n      {lengthArrayFiltered}\n      人\n      <br />\n      異動までの平均年数(該当者) :\n      {' '}\n      {termStayFiltered}\n      年\n      <br />\n      異動先(該当者)\n      {' '}\n      {newLocationFiltered()}\n      <br />\n    </div>\n  );\n};\n\nConnectedSearch.propTypes = {\n  info: PropTypes.arrayOf(PropTypes.object).isRequired,\n  ownProps: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst Search = connect(mapStateToProps)(ConnectedSearch);\n\nexport default Search;\n","\n\nimport React from 'react';\nimport Search from './Search';\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: 'all',\n      department: 'all',\n      position: 'all',\n      location: 'all',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const { value } = target;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      gender, department, position, location,\n    } = this.state;\n\n    return (\n      <form className=\"searchform\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"gender\"> {// eslint-disable-line\n        }\n          Gender:\n          <select id=\"gender\" name=\"gender\" onChange={this.handleChange} value={gender}>\n            <option value=\"all\">All</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"department\"> {// eslint-disable-line\n        }\n          Department:\n          <select id=\"department\" name=\"department\" onChange={this.handleChange} value={department}>\n            <option value=\"all\">All</option>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"position\"> {// eslint-disable-line\n        }\n          Position:\n          <select id=\"position\" name=\"position\" onChange={this.handleChange} value={position}>\n            <option value=\"all\">All</option>\n            <option value=\"Director\">Director</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Chief\">Chief</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"location\"> {// eslint-disable-line\n        }\n          Location:\n          <select id=\"location\" name=\"location\" onChange={this.handleChange} value={location}>\n            <option value=\"all\">All</option>\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Osaka\">Osaka</option>\n            <option value=\"OverSeas\">OverSeas</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n        <br />\n        <br />\n        <Search\n          gender={gender}\n          department={department}\n          position={position}\n          location={location}\n        />\n        <br />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageContents = () => (\n  <div className=\"pagecontents\">\n    <br />\n    <p>\n      <Link to=\"/search/\">情報検索</Link>\n      から条件を指定して異動状況を確認できます。\n    </p>\n    <p>\n      <Link to=\"/database/\">データベース</Link>\n      で全てのリストが確認できます。\n    </p>\n    <br />\n    <br />\n    <br />\n    <p>\n    ※情報入力をされていない方は\n      <Link to=\"/form/\">情報入力ページ</Link>\n      から入力お願いします。\n    </p>\n    <br />\n  </div>\n);\n\nexport default PageContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinkButton = ({ buttonName }) => (\n  <button className=\"link-button\" type=\"button\">\n    {buttonName}\n  </button>\n);\n\nLinkButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default LinkButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LinkButton from './LinkButton';\n\nconst Topbar = () => (\n  <div className=\"topbar\">\n    <h3>社員データ</h3>\n    <Link to={`${process.env.PUBLIC_URL}/`}>\n      <LinkButton buttonName=\"トップ\" />\n    </Link>\n    <Link to=\"/form/\">\n      <LinkButton buttonName=\"情報入力\" />\n    </Link>\n    <Link to=\"/search/\">\n      <LinkButton buttonName=\"情報検索\" />\n    </Link>\n    <Link to=\"/database/\">\n      <LinkButton buttonName=\"登録データ\" />\n    </Link>\n  </div>\n);\n\nexport default Topbar;\n","import React from 'react';\nimport Form from './components/Form';\nimport DataBase from './components/Database';\nimport SearchForm from './components/Searchform';\nimport PageContents from './components/PageContents';\nimport Topbar from './components/Topbar';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"main-page\">\n      <Topbar />\n\n      <Route path={process.env.PUBLIC_URL + '/'} exact component={PageContents} />\n      <Route path=\"/form\" component={Form} />\n      <Route path=\"/search\" component={SearchForm} />\n      <Route path=\"/database\" component={DataBase} />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD_INFO, SORT_TABLE } from '../actions/action';\n\nconst initialState = {\n  columns: ['ID', 'Name', 'Age', 'Gender', 'Department', 'Position', 'Arrival', 'Leave', 'Location'],\n  info: [\n    {\n      id: 0,\n      name: 'Tom',\n      age: 42,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Manager',\n      arrival: 2015,\n      leave: 2017,\n      location: 'Tokyo',\n    },\n    {\n      id: 1,\n      name: 'Bob',\n      age: 33,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Chief',\n      arrival: 2013,\n      leave: 2019,\n      location: 'Osaka',\n    },\n    {\n      id: 2,\n      name: 'Josephine',\n      age: 45,\n      gender: 'Female',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2015,\n      leave: 2020,\n      location: 'OverSeas',\n    },\n    {\n      id: 3,\n      name: 'Linda',\n      age: 49,\n      gender: 'Others',\n      department: 'Others',\n      position: 'Director',\n      arrival: 2015,\n      leave: 2022,\n      location: 'Others',\n    },\n    {\n      id: 4,\n      name: 'Taro',\n      age: 22,\n      gender: 'Others',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2018,\n      leave: 2029,\n      location: 'Osaka',\n    },\n  ],\n};\n\nconst addInfo = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_INFO:\n      return {\n        ...state,\n        info: [\n          ...state.info,\n          action.info,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nconst sortTable = (state = { sortCase: 'ID', order: 'asc' }, action) => {\n  switch (action.type) {\n    case SORT_TABLE:\n      return {\n        ...state.sortTable,\n        sortCase: action.sortCase,\n        order: action.order,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  addInfo,\n  sortTable,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}