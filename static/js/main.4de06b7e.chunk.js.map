{"version":3,"sources":["serviceWorker.js","components/Form.js","redux/actions/action.js","components/Database.js","components/Search.js","components/Searchform.js","components/PageContents.js","components/LinkButton.js","components/Topbar.js","App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","ConnectedForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","age","arrival","leave","gender","department","position","nameEmpty","nameAlertColor","wrongArrival","arrivalAlertColor","handleChange","bind","assertThisInitialized","handleSubmit","handleClear","event","target","value","type","checked","setState","defineProperty","preventDefault","_this$state","parseInt","id","uuidv1","addInfo","_this$state2","react_default","a","createElement","className","onSubmit","htmlFor","style","backgroundColor","onChange","onClick","React","Component","Form","connect","dispatch","info","DataBase","columns","_ref","key","map","concat","sum","reduce","x","y","length","Search","ownProps","_ref2","selectedGender","filterGender","filter","selectedDepartment","filterDepartment","selectedPosition","filterPosition","selectedLocation","filterLocation","termFilterArray","lengthFilterArrayy","termStayEach","nameAll","locationAll","lengthArrayAll","termStayAverage","toFixed","lengthArrayFiltered","termStayFiltered","newLocation","lengthOfTokyo","array","lengthOfOsaka","lengthOfOverSeas","lengthOfOthers","newLocationAll","newLocationFiltered","SearchForm","components_Search","PageContents","Link","to","LinkButton","buttonName","Topbar","process","components_LinkButton","App","BrowserRouter","components_Topbar","Route","path","exact","component","initialState","rootReducer","arguments","undefined","action","objectSpread","toConsumableArray","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4de06b7e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport uuidv1 from 'uuid';\nimport { addInfo } from '../redux/actions/action';\n\nconst mapDispatchToProps = dispatch => ({\n  addInfo: info => dispatch(addInfo(info)),\n});\n\nclass ConnectedForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n      nameEmpty: '',\n      nameAlertColor: '',\n      wrongArrival: '',\n      arrivalAlertColor: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n       name, age, gender, department, position, arrival, leave, location, nameEmpty, nameAlertColor, wrongArrival, arrivalAlertColor // eslint-disable-line\n    } = this.state;\n\n    age = parseInt(age, 10);\n    arrival = parseInt(arrival, 10);\n    leave = parseInt(leave, 10);\n    const id = uuidv1();\n    if (name === '') {\n      this.setState({\n        nameEmpty: 'Put in your Name',\n        nameAlertColor: 'red',\n        wrongArrival: '',\n        arrivalAlertColor: '',\n      });\n    } else if (arrival > leave) {\n      this.setState({\n        wrongArrival: 'Should be earlier than Leaving',\n        arrivalAlertColor: 'red',\n        nameEmpty: '',\n        nameAlertColor: '',\n      });\n    } else {\n      this.props.addInfo({  // eslint-disable-line\n        id, name, age, gender, department, position, arrival, leave, location,\n      });\n      this.setState({\n        name: '',\n        age: 30,\n        arrival: 2010,\n        leave: 2010,\n        gender: 'Male',\n        department: 'Marketing',\n        position: 'Director',\n        location: 'Tokyo',\n        nameAlertColor: '',\n        nameEmpty: '',\n        wrongArrival: '',\n        arrivalAlertColor: '',\n      });\n    }\n  }\n\n  handleClear(event) {\n    event.preventDefault();\n    this.setState({\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n      nameAlertColor: '',\n      nameEmpty: '',\n      wrongArrival: '',\n      arrivalAlertColor: '',\n    });\n  }\n\n  render() {\n    const {\n      name,\n      age,\n      gender,\n      department,\n      position,\n      arrival,\n      leave,\n      location,\n      nameEmpty,\n      wrongArrival,\n      nameAlertColor,\n      arrivalAlertColor,\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\" style={{ backgroundColor: nameAlertColor }}>\n          Name\n          <br />\n          {nameEmpty}\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            style={{ backgroundColor: nameAlertColor }}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"age\">\n          Age\n          <br />\n          <input\n            type=\"number\"\n            name=\"age\"\n            id=\"age\"\n            value={age}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"gender\"> {// eslint-disable-line\n        }\n          <br />\n          <select\n            id=\"gender\"\n            name=\"gender\"\n            onChange={this.handleChange}\n            value={gender}\n          >\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"department\"> {// eslint-disable-line\n        }\n          Department\n          <br />\n          <select id=\"department\" name=\"department\" onChange={this.handleChange} value={department}>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"position\"> {// eslint-disable-line\n        }\n          Position\n          <br />\n          <select id=\"position\" name=\"position\" onChange={this.handleChange} value={position}>\n            <option value=\"Director\">Director</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Chief\">Chief</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"arrival\" style={{ backgroundColor: arrivalAlertColor }}>\n          Arrival\n          <br />\n          {wrongArrival}\n          <input\n            type=\"number\"\n            id=\"arrival\"\n            name=\"arrival\"\n            value={arrival}\n            onChange={this.handleChange}\n            style={{ backgroundColor: arrivalAlertColor }}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"leave\">\n          Leaving\n          <br />\n          <input\n            type=\"number\"\n            id=\"leave\"\n            name=\"leave\"\n            value={leave}\n            onChange={this.handleChange}\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"location\"> {// eslint-disable-line\n        }\n          Location\n          <br />\n          <select id=\"location\" name=\"location\" onChange={this.handleChange} value={location}>\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Osaka\">Osaka</option>\n            <option value=\"OverSeas\">OverSeas</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <button type=\"submit\" value=\"Send\">\n          Submit\n        </button>\n        <button type=\"button\" onClick={this.handleClear}>\n          Reset\n        </button>\n      </form>\n    );\n  }\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","export const ADD_INFO = 'ADD_INFO';\n\nexport const addInfo = info => ({\n  type: ADD_INFO,\n  info: info,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// import { addInfo } from '../redux/actions/action';\n\nconst mapStateToProps = state => ({\n  columns: state.columns,\n  info: state.info,\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   addInfo: info => dispatch(addInfo(info)),\n// });\n\nconst ConnectedDataBase = ({\n  columns,\n  info,\n}) => (\n  <table className=\"database\">\n    <tbody>\n      <tr key=\"columnstr\">\n        {columns.map(state => (\n          <th key={`columnsth${state}`}>{state}</th>\n        ))}\n      </tr>\n      {info.map(state => (\n        <tr key={`tr${state.id}`}>\n          <td key={`name${state.id}`}>{state.name}</td>\n          <td key={`age${state.id}`}>{state.age}</td>\n          <td key={`gender${state.id}`}>{state.gender}</td>\n          <td key={`department${state.id}`}>{state.department}</td>\n          <td key={`position${state.id}`}>{state.position}</td>\n          <td key={`arrival${state.id}`}>{state.arrival}</td>\n          <td key={`leave${state.id}`}>{state.leave}</td>\n          <td key={`location${state.id}`}>{state.location}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nConnectedDataBase.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  info: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst DataBase = connect(mapStateToProps)(ConnectedDataBase);\n\nexport default DataBase;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst mapStateToProps = ({ info }, ownProps) => ({\n  info,\n  ownProps,\n});\n\nconst sum = a => a.reduce((x, y) => x + y, 0);\n\nconst length = a => a.reduce(() => a.length, 0);\n\nconst ConnectedSearch = ({ info, ownProps }) => {\n  // 男性か女性か\n  const selectedGender = ownProps.gender;\n\n  const filterGender = info.filter((value) => {\n    if (selectedGender !== 'all') {\n      return value.gender === selectedGender;\n    }\n    return value.gender;\n  });\n  // その中で部署はどこか\n  const selectedDepartment = ownProps.department;\n\n  const filterDepartment = filterGender.filter((value) => {\n    if (selectedDepartment !== 'all') {\n      return value.department === selectedDepartment;\n    }\n    return value.department;\n  });\n  // その中でポジションは何か\n  const selectedPosition = ownProps.position;\n\n  const filterPosition = filterDepartment.filter((value) => {\n    if (selectedPosition !== 'all') {\n      return value.position === selectedPosition;\n    }\n    return value.position;\n  });\n  // その中でロケーションはどこか\n  const selectedLocation = ownProps.location;\n\n  const filterLocation = filterPosition.filter((value) => {\n    if (selectedLocation !== 'all') {\n      return value.location === selectedLocation;\n    }\n    return value.location;\n  });\n\n  // 選択した部署のLeave - Arrival\n  const termFilterArray = filterPosition.map(a => a.leave - a.arrival);\n\n  // 選択した部署の配列のposition要素の羅列\n  const lengthFilterArrayy = filterPosition.map(a => a.position);\n\n  // 全員のLeave - arrivalの列挙\n  const termStayEach = info.map(a => a.leave - a.arrival);\n  // 全員の名前の列挙\n  const nameAll = info.map(a => a.name);\n  // 全員のLocationの列挙\n  const locationAll = info.map(a => a.location);\n  // 全員の配列の要素数\n  const lengthArrayAll = length(nameAll);\n  // 全員の平均勤続年数 = (全員のleave-arrivalの合計) / 該全員の配列の要素数\n  const termStayAverage = (sum(termStayEach) / lengthArrayAll).toFixed(1) || 0;\n  // 全員の異動先毎の人数\n  const newLocationAll = () => {\n    const lengthOfTokyo = locationAll.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = locationAll.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = locationAll.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = locationAll.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n  // 該当者の配列の要素数\n  const lengthArrayFiltered = length(lengthFilterArrayy);\n  // 該当者の平均勤続年数 = (該当者のleave-arrivalの合計) / 該当者の配列の要素数\n  const termStayFiltered = (sum(termFilterArray) / lengthArrayFiltered).toFixed(1) || 0;\n\n  // 該当者の異動先の列挙\n  const newLocation = filterLocation.map(a => a.location);\n  // 該当者の異動先毎の人数\n  const newLocationFiltered = () => {\n    const lengthOfTokyo = newLocation.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = newLocation.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = newLocation.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = newLocation.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n\n  return (\n    <div className=\"searchresult\">\n      全人数 :\n      {' '}\n      {lengthArrayAll}\n      人\n      <br />\n      異動までの平均年数(全体) :\n      {' '}\n      {termStayAverage}\n      年\n      <br />\n      異動先(全体)\n      {' '}\n      {newLocationAll()}\n      <br />\n      <br />\n      該当者数 :\n      {' '}\n      {lengthArrayFiltered}\n      人\n      <br />\n      異動までの平均年数(該当者) :\n      {' '}\n      {termStayFiltered}\n      年\n      <br />\n      異動先(該当者)\n      {' '}\n      {newLocationFiltered()}\n      <br />\n    </div>\n  );\n};\n\nConnectedSearch.propTypes = {\n  info: PropTypes.arrayOf(PropTypes.object).isRequired,\n  ownProps: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst Search = connect(mapStateToProps)(ConnectedSearch);\n\nexport default Search;\n","\n\nimport React from 'react';\nimport Search from './Search';\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gender: 'all',\n      department: 'all',\n      position: 'all',\n      location: 'all',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const { value } = target;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      gender, department, position, location,\n    } = this.state;\n\n    return (\n      <form className=\"searchform\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"gender\"> {// eslint-disable-line\n        }\n          Gender:\n          <select id=\"gender\" name=\"gender\" onChange={this.handleChange} value={gender}>\n            <option value=\"all\">All</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"department\"> {// eslint-disable-line\n        }\n          Department:\n          <select id=\"department\" name=\"department\" onChange={this.handleChange} value={department}>\n            <option value=\"all\">All</option>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"position\"> {// eslint-disable-line\n        }\n          Position:\n          <select id=\"position\" name=\"position\" onChange={this.handleChange} value={position}>\n            <option value=\"all\">All</option>\n            <option value=\"Director\">Director</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Chief\">Chief</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n\n        <label htmlFor=\"location\"> {// eslint-disable-line\n        }\n          Location:\n          <select id=\"location\" name=\"location\" onChange={this.handleChange} value={location}>\n            <option value=\"all\">All</option>\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Osaka\">Osaka</option>\n            <option value=\"OverSeas\">OverSeas</option>\n            <option value=\"Others\">Others</option>\n          </select>\n        </label>\n        <br />\n        <br />\n        <br />\n        <Search\n          gender={gender}\n          department={department}\n          position={position}\n          location={location}\n        />\n        <br />\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageContents = () => (\n  <div className=\"pagecontents\">\n    <br />\n    <p>\n      <Link to=\"/search/\">情報検索</Link>\n      から条件を指定して異動状況を確認できます。\n    </p>\n    <p>\n      <Link to=\"/database/\">データベース</Link>\n      で全てのリストが確認できます。\n    </p>\n    <br />\n    <br />\n    <br />\n    <p>\n    ※情報入力をされていない方は\n      <Link to=\"/form/\">情報入力ページ</Link>\n      から入力お願いします。\n    </p>\n    <br />\n  </div>\n);\n\nexport default PageContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinkButton = ({ buttonName }) => (\n  <button className=\"link-button\" type=\"button\">\n    {buttonName}\n  </button>\n);\n\nLinkButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default LinkButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LinkButton from './LinkButton';\n\nconst Topbar = () => (\n  <div className=\"topbar\">\n    <h3>社員データ</h3>\n    <Link to={`${process.env.PUBLIC_URL}/`}>\n      <LinkButton buttonName=\"トップ\" />\n    </Link>\n    <Link to=\"/form/\">\n      <LinkButton buttonName=\"情報入力\" />\n    </Link>\n    <Link to=\"/search/\">\n      <LinkButton buttonName=\"情報検索\" />\n    </Link>\n    <Link to=\"/database/\">\n      <LinkButton buttonName=\"登録データ\" />\n    </Link>\n  </div>\n);\n\nexport default Topbar;\n","import React from 'react';\nimport Form from './components/Form';\nimport DataBase from './components/Database';\nimport SearchForm from './components/Searchform';\nimport PageContents from './components/PageContents';\nimport Topbar from './components/Topbar';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"main-page\">\n      <Topbar />\n\n      <Route path={process.env.PUBLIC_URL + '/'} exact component={PageContents} />\n      <Route path=\"/form\" component={Form} />\n      <Route path=\"/search\" component={SearchForm} />\n      <Route path=\"/database\" component={DataBase} />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ADD_INFO } from '../actions/action';\n\nconst initialState = {\n  columns: ['Name', 'Age', 'Gender', 'Department', 'Position', 'Arrival', 'Leave', 'location'],\n  info: [\n    {\n      id: 0,\n      name: 'Tom',\n      age: 42,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Manager',\n      arrival: 2015,\n      leave: 2017,\n      location: 'Tokyo',\n    },\n    {\n      id: 1,\n      name: 'Bob',\n      age: 33,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Chief',\n      arrival: 2013,\n      leave: 2019,\n      location: 'Osaka',\n    },\n    {\n      id: 2,\n      name: 'Josephine',\n      age: 45,\n      gender: 'Female',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2015,\n      leave: 2020,\n      location: 'OverSeas',\n    },\n    {\n      id: 3,\n      name: 'Linda',\n      age: 49,\n      gender: 'Others',\n      department: 'Others',\n      position: 'Director',\n      arrival: 2015,\n      leave: 2022,\n      location: 'Others',\n    },\n    {\n      id: 4,\n      name: 'Taro',\n      age: 22,\n      gender: 'Others',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2018,\n      leave: 2029,\n      location: 'Osaka',\n    },\n  ],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_INFO:\n      return {\n        ...state,\n        info: [\n          ...state.info,\n          action.info,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/store';\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}