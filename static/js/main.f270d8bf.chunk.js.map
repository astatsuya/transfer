{"version":3,"sources":["serviceWorker.js","redux/actions/action.js","components/Form.js","components/Database.js","components/Search.js","components/Searchform.js","components/PageContents.js","components/LinkButton.js","components/Topbar.js","App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","addInfo","info","type","ConnectedForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","age","arrival","leave","gender","department","position","handleChange","bind","assertThisInitialized","handleSubmit","handleClear","event","target","value","checked","setState","defineProperty","preventDefault","_this$state","parseInt","alert","_this$state2","react_default","a","createElement","className","onSubmit","onChange","onClick","React","Component","Form","connect","dispatch","DataBase","columns","_ref","id","key","map","index","concat","sum","reduce","x","y","length","Search","ownProps","selectedGender","filterGender","filter","selectedDepartment","filterDepartment","selectedPosition","filterPosition","selectedLocation","filterLocation","term_filter_array","length_filter_array","term_stay_each","nameAll","locationAll","lengthArrayAll","term_stay_average","toFixed","lengthArrayFiltered","term_stay_filtered","new_location","lengthOfTokyo","array","lengthOfOsaka","lengthOfOverSeas","lengthOfOthers","new_location_all","new_location_filtered","SearchForm","components_Search","PageContents","Link","to","LinkButton","buttonName","Topbar","process","components_LinkButton","App","BrowserRouter","components_Topbar","Route","path","exact","component","initialState","rootReducer","arguments","undefined","action","objectSpread","toConsumableArray","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f270d8bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ADD_INFO = 'ADD_INFO';\n\nexport const addInfo = info => ({\n  type: ADD_INFO,\n  info: info,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addInfo } from '../redux/actions/action';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addInfo: info => dispatch(addInfo(info)),\n  };\n};\n\nclass ConnectedForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n      name, age, gender, department, position, arrival, leave, location\n    } = this.state;\n\n    age = parseInt(age, 10);\n    arrival = parseInt(arrival, 10);\n    leave = parseInt(leave, 10);\n\n\n    if(name === \"\") {\n      alert('You must input your name!!');\n    } else if(arrival > leave) {\n      alert('Arrival should be earlier than Leaving');\n    } else {\n\n      this.props.addInfo({\n        name, age, gender, department, position, arrival, leave, location\n      });\n      this.setState({\n        name: '',\n        age: 30,\n        arrival: 2010,\n        leave: 2010,\n        gender: 'Male',\n        department: 'Marketing',\n        position: 'Director',\n        location: 'Tokyo',\n      });\n    }\n  }\n\n  handleClear(event) {\n    event.preventDefault();\n      this.setState({\n        name: '',\n        age: 30,\n        arrival: 2010,\n        leave: 2010,\n        gender: 'Male',\n        department: 'Marketing',\n        position: 'Director',\n        location: 'Tokyo',\n    });\n  }\n\n  render() {\n    const {\n      name, age, gender, department, position, arrival, leave, location\n    } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <label>\n          Age\n        </label>\n        <br />\n        <input\n          type=\"number\"\n          name=\"age\"\n          value={age}\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <label>\n          Gender\n        </label>\n        <br />\n        <select name=\"gender\" onChange={this.handleChange} value={gender}>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Others\">Others</option>\n        </select>\n        <br />\n\n        <label>\n          Department\n        </label>\n        <br />\n        <select name=\"department\" onChange={this.handleChange} value={department}>\n          <option value=\"Marketing\">Marketing</option>\n          <option value=\"Engineering\">Engineering</option>\n          <option value=\"Others\">Others</option>\n        </select>\n        <br />\n\n        <label>\n          Position\n        </label>\n        <br />\n        <select name=\"position\" onChange={this.handleChange} value={position}>\n          <option value=\"Director\">Director</option>\n          <option value=\"Manager\">Manager</option>\n          <option value=\"Chief\">Chief</option>\n          <option value=\"Others\">Others</option>\n        </select>\n        <br />\n\n        <label>\n          Arrival\n        </label>\n        <br />\n        <input\n          type=\"number\"\n          name=\"arrival\"\n          value={arrival}\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <label>\n          Leaving\n        </label>\n        <br />\n        <input\n          type=\"number\"\n          name=\"leave\"\n          value={leave}\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <label>\n          Location\n        </label>\n        <br />\n        <select name=\"location\" onChange={this.handleChange} value={location}>\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Osaka\">Osaka</option>\n          <option value=\"OverSeas\">OverSeas</option>\n          <option value=\"Others\">Others</option>\n        </select>\n        <br />\n\n        <button type=\"submit\" value=\"Send\">\n          Submit\n        </button>\n        <button onClick={this.handleClear}>\n          Reset\n        </button>\n      </form>\n    );\n  }\n}\n\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addInfo } from '../redux/actions/action';\n\nconst mapStateToProps = state => {\n  return {\n    columns: state.columns,\n    info: state.info,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addInfo: info => dispatch(addInfo(info)),\n  };\n};\n\nconst ConnectedDataBase = ({ dispatch, columns, id, info }) => {\n  return (\n  <table className='database'>\n    <tbody>\n      <tr key='columnstr'>\n        {columns.map((state, index) => (\n          <th key={`columnsth${index}`}>{state}</th>\n        ))}\n      </tr>\n      {info.map((state, index) => {\n        return (\n          <tr key={`tr${index}`}>\n            <td key={`name${index}`}>{state.name}</td>\n            <td key={`age${index}`}>{state.age}</td>\n            <td key={`gender${index}`}>{state.gender}</td>\n            <td key={`department${index}`}>{state.department}</td>\n            <td key={`position${index}`}>{state.position}</td>\n            <td key={`arrival${index}`}>{state.arrival}</td>\n            <td key={`leave${index}`}>{state.leave}</td>\n            <td key={`location${index}`}>{state.location}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n  );\n};\n\nconst DataBase = connect(mapStateToProps, mapDispatchToProps)(ConnectedDataBase);\n\nexport default DataBase;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    columns: state.columns,\n    info: state.info,\n    ownProps: ownProps\n  };\n};\n\nconst sum = a => {\n  return a.reduce((x, y) => {\n    return x + y;\n  }, 0)\n}\n\nconst length = a => {\n  return a.reduce((x, y) => {\n    return a.length;\n  }, 0)\n}\n\nconst ConnectedSearch = ({ info, ownProps } ) => {\n  //男性か女性か\n  let selectedGender = ownProps.gender;\n\n  const filterGender = info.filter(value => {\n    if(selectedGender !== 'all'){\n      return value.gender === selectedGender;\n    } else {\n      return value.gender\n    }\n  })\n  //その中で部署はどこか\n  let selectedDepartment = ownProps.department\n\n  const filterDepartment = filterGender.filter(value => {\n    if(selectedDepartment !== 'all'){\n      return value.department === selectedDepartment;\n    } else {\n      return value.department\n    }\n  })\n  //その中でポジションは何か\n  let selectedPosition = ownProps.position;\n\n  const filterPosition = filterDepartment.filter(value => {\n    if(selectedPosition !== 'all'){\n      return value.position === selectedPosition;\n    } else {\n      return value.position\n    }\n  })\n  //その中でロケーションはどこか\n  let selectedLocation = ownProps.location;\n\n  const filterLocation = filterPosition.filter(value => {\n    if(selectedLocation !== 'all'){\n      return value.location === selectedLocation;\n    } else {\n      return value.location\n    }\n  })\n\n  //選択した部署のLeave - Arrival\n  const term_filter_array = filterPosition.map(a => {\n    return a.leave - a.arrival;\n  })\n\n  //選択した部署の配列のposition要素の羅列\n  const length_filter_array = filterPosition.map(a => {\n    return a.position\n  })\n\n  //全員のLeave - arrivalの列挙\n  const term_stay_each = info.map(a => {\n    return  a.leave - a.arrival;\n  })\n  //全員の名前の列挙\n  const nameAll = info.map(a => {\n    return a.name\n  })\n  //全員の部署の列挙\n  const locationAll = info.map(a => {\n    return a.location\n  })\n //全員の配列の要素数\n  const lengthArrayAll = length(nameAll)\n  //全員の平均勤続年数 = (全員のleave-arrivalの合計) / 該全員の配列の要素数\n  const term_stay_average = (sum(term_stay_each) /lengthArrayAll).toFixed(1) | 0;\n  //全員の異動先\n  const new_location_all = () => {\n    const lengthOfTokyo = locationAll.filter((array) => {\n      return array === 'Tokyo'\n    }).length\n\n    const lengthOfOsaka = locationAll.filter((array) => {\n      return array === 'Osaka'\n    }).length\n\n    const lengthOfOverSeas = locationAll.filter((array) => {\n      return array === 'OverSeas'\n    }).length\n\n    const lengthOfOthers = locationAll.filter((array) => {\n      return array === 'Others'\n    }).length\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`\n  }\n  //該当者の配列の要素数\n  const lengthArrayFiltered = length(length_filter_array)\n  //該当者の平均勤続年数 = (該当者のleave-arrivalの合計) / 該当者の配列の要素数\n  const term_stay_filtered = (sum(term_filter_array) / lengthArrayFiltered).toFixed(1) | 0;\n\n  //該当者の異動先の要素数\n  const new_location = filterLocation.map(a => {\n    return a.location;\n  })\n  //該当者の異動先の列挙\n  const new_location_filtered = () => {\n    const lengthOfTokyo = new_location.filter((array) => {\n      return array === 'Tokyo'\n    }).length\n\n    const lengthOfOsaka = new_location.filter((array) => {\n      return array === 'Osaka'\n    }).length\n\n    const lengthOfOverSeas = new_location.filter((array) => {\n      return array === 'OverSeas'\n    }).length\n\n    const lengthOfOthers = new_location.filter((array) => {\n      return array === 'Others'\n    }).length\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`\n  }\n\n  return (\n    <div className='searchresult'>\n      全人数 : {lengthArrayAll}人\n      <br />\n      異動までの平均年数(全体) : {term_stay_average}年\n      <br />\n      異動先(全体){new_location_all()}\n      <br />\n      <br />\n      該当者数 : {lengthArrayFiltered}人\n      <br />\n      異動までの平均年数(該当者) : {term_stay_filtered}年\n      <br />\n      異動先(該当者){new_location_filtered()}\n      <br />\n    </div>\n  );\n};\n\nconst Search = connect(mapStateToProps)(ConnectedSearch);\n\nexport default Search;\n","import React from 'react';\nimport Search from './Search';\n\n  class SearchForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        gender: 'all',\n        department: 'all',\n        position: 'all',\n        location: 'all',\n      };\n\n      this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value,\n      })\n    }\n\n    render() {\n      const {\n        gender, department, position, location\n      } = this.state;\n\n      return (\n        <form className=\"searchform\" onSubmit={this.handleSubmit}>\n          <label>\n            Gender:\n          </label>\n          <select name=\"gender\" onChange={this.handleChange} value={gender}>\n            <option value=\"all\">All</option>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br />\n          <label>\n            Department:\n          </label>\n          <select name=\"department\" onChange={this.handleChange} value={department}>\n            <option value=\"all\">All</option>\n            <option value=\"Marketing\">Marketing</option>\n            <option value=\"Engineering\">Engineering</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br />\n          <label>\n            Position:\n          </label>\n          <select name=\"position\" onChange={this.handleChange} value={position}>\n            <option value=\"all\">All</option>\n            <option value=\"Director\">Director</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Chief\">Chief</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br />\n          <label>\n            Location:\n          </label>\n          <select name=\"location\" onChange={this.handleChange} value={location}>\n            <option value=\"all\">All</option>\n            <option value=\"Tokyo\">Tokyo</option>\n            <option value=\"Osaka\">Osaka</option>\n            <option value=\"OverSeas\">OverSeas</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br />\n          <br />\n          <br />\n          <Search\n            gender={this.state.gender}\n            department={this.state.department}\n            position={this.state.position}\n            location={this.state.location}\n          />\n          <br />\n        </form>\n      );\n    }\n  }\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst PageContents = () => (\n  <div className=\"pagecontents\">\n    <br />\n    <p><Link to=\"/search/\">情報検索</Link>から条件を指定して異動状況を確認できます。</p>\n    <p><Link to=\"/database/\">データベース</Link>で全てのリストが確認できます。</p>\n    <br />\n    <br />\n    <br />\n    <p>※情報入力をされていない方は<Link to=\"/form/\">情報入力ページ</Link>から入力お願いします。</p>\n    <br />\n  </div>\n)\n\nexport default PageContents;\n","import React from 'react';\n\nconst LinkButton = (props) => (\n    <button\n      className='link-button'\n    >{props.buttonName}\n    </button>\n);\n\nexport default LinkButton;\n","import React from 'react';\nimport LinkButton from './LinkButton';\nimport { Link } from 'react-router-dom'\n\n\nconst Topbar = () => (\n  <div className=\"topbar\">\n    <h3>社員データ</h3>\n    <Link to={process.env.PUBLIC_URL + '/'}>\n      <LinkButton buttonName={'トップ'}  />\n    </Link>\n    <Link to=\"/form/\">\n      <LinkButton buttonName={'情報入力'} />\n    </Link>\n    <Link to=\"/search/\">\n      <LinkButton buttonName={'情報検索'} />\n    </Link>\n    <Link to=\"/database/\">\n      <LinkButton buttonName={'データベース'} />\n    </Link>\n  </div>\n);\n\nexport default Topbar;\n","import React from 'react';\nimport Form from './components/Form';\nimport DataBase from './components/Database';\nimport SearchForm from './components/Searchform';\nimport PageContents from './components/PageContents';\nimport Topbar from './components/Topbar';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"main-page\">\n      <Topbar />\n\n      <Route path={process.env.PUBLIC_URL + '/'} exact component={PageContents} />\n      <Route path=\"/form\" component={Form} />\n      <Route path=\"/search\" component={SearchForm} />\n      <Route path=\"/database\" component={DataBase} />\n    </div>\n  </BrowserRouter>\n)\n\n\nexport default App;\n","import { ADD_INFO } from '../actions/action';\n\nconst initialState = {\n  columns: ['Name', 'Age', 'Gender', 'Department', 'Position', 'Arrival', 'Leave', 'location'],\n  info: [\n    {\n      name: 'Tom',\n      age: 42,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Manager',\n      arrival: 2015,\n      leave: 2017,\n      location: 'Tokyo',\n    },\n    {\n      name: 'Bob',\n      age: 33,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Chief',\n      arrival: 2013,\n      leave: 2019,\n      location: 'Osaka',\n    },\n    {\n      name: 'Josephine',\n      age: 45,\n      gender: 'Female',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2015,\n      leave: 2020,\n      location: 'OverSeas',\n    },\n    {\n      name: 'Linda',\n      age: 49,\n      gender: 'Others',\n      department: 'Others',\n      position: 'Director',\n      arrival: 2015,\n      leave: 2022,\n      location: 'Others',\n    },\n    {\n      name: 'Taro',\n      age: 22,\n      gender: 'Others',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2018,\n      leave: 2029,\n      location: 'Osaka',\n    },\n  ],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_INFO:\n      return {\n        ...state,\n        info: [\n          ...state.info,\n          action.info,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/store';\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}