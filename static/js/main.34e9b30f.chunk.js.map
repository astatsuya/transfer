{"version":3,"sources":["serviceWorker.js","components/MapToProps.js","redux/actions/action.js","components/Form.js","components/Database.js","components/Search.js","components/Searchform.js","components/PageContents.js","components/LinkButton.js","components/Topbar.js","App.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","mapDispatchToProps","dispatch","addInfo","info","type","updateForm","form","object","name","value","alertForm","nameEmpty","nameAlertColor","wrongArrival","arrivalAlertColor","clearForm","sortTable","sortCase","order","changeForm","mapStateToProps","state","formContents","columns","searchForm","sortedInfo","sortBy","sort","a","b","id","nameA","toUpperCase","nameB","age","gender","department","position","arrival","leave","sortTableState","Form","connect","_ref","handleChange","event","_event$target","target","parseInt","react_default","createElement","className","onSubmit","preventDefault","htmlFor","style","backgroundColor","onChange","onClick","DataBase","key","border","map","concat","width","Search","sum","reduce","x","y","length","filteredInfo","filter","searchKeys","Object","keys","i","termFilterArray","lengthFilterArrayy","termStayEach","nameAll","locationAll","lengthArrayAll","termStayAverage","toFixed","lengthArrayFiltered","termStayFiltered","newLocation","lengthOfTokyo","array","lengthOfOsaka","lengthOfOverSeas","lengthOfOthers","newLocationAll","newLocationFiltered","SearchForm","components_Search","PageContents","Link","to","LinkButton","buttonName","Topbar","process","components_LinkButton","App","BrowserRouter","components_Topbar","Route","path","exact","component","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","defineProperty","store","createStore","subscribe","console","log","getState","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34e9b30f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  addInfo,\n  updateForm,\n  clearForm,\n  alertForm,\n  sortTable,\n  changeForm,\n} from '../redux/actions/action';\n\nexport const sortTableState = (state, sortBy) => {\n  switch (sortBy.sortCase) {\n    case 'ID':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.id - b.id);\n      }\n      return state.sort((a, b) => b.id - a.id);\n    case 'Name':\n      return state.sort((a, b) => {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Age':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.age - b.age);\n      }\n      return state.sort((a, b) => b.age - a.age);\n    case 'Gender':\n      return state.sort((a, b) => {\n        const nameA = a.gender.toUpperCase();\n        const nameB = b.gender.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Department':\n      return state.sort((a, b) => {\n        const nameA = a.department.toUpperCase();\n        const nameB = b.department.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Position':\n      return state.sort((a, b) => {\n        const nameA = a.position.toUpperCase();\n        const nameB = b.position.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    case 'Arrival':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.arrival - b.arrival);\n      }\n      return state.sort((a, b) => b.arrival - a.arrival);\n    case 'Leave':\n      if (sortBy.order === 'asc') {\n        return state.sort((a, b) => a.leave - b.leave);\n      }\n      return state.sort((a, b) => b.leave - a.leave);\n    case 'Location':\n      return state.sort((a, b) => {\n        const nameA = a.location.toUpperCase();\n        const nameB = b.location.toUpperCase();\n        if (sortBy.order === 'asc') {\n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        if (sortBy.order === 'desc') {\n          if (nameA > nameB) {\n            return -1;\n          }\n          if (nameA < nameB) {\n            return 1;\n          }\n          return 0;\n        }\n        return 0;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  addInfo: info => dispatch(addInfo(info)),\n  updateForm: form => dispatch(updateForm(form)),\n  alertForm: form => dispatch(alertForm(form)),\n  clearForm: () => dispatch(clearForm()),\n  sortTable: (sortCase, order) => dispatch(sortTable(sortCase, order)),\n  changeForm: form => dispatch(changeForm(form)),\n});\n\nexport const mapStateToProps = state => ({\n  formContents: state.updateForm.formContents,\n  columns: state.addInfo.columns,\n  searchForm: state.searchForm.searchForm,\n  sortedInfo: sortTableState(state.addInfo.info, state.sortTable),\n  info: state.addInfo.info,\n  state,\n});\n\nexport const formTypes = () => {\n  const PropTypes = 'PropTypes';\n  return (\n    {\n      age: PropTypes.number,\n      arrival: PropTypes.number,\n      arrivalAlertColor: PropTypes.string,\n      department: PropTypes.string,\n      gender: PropTypes.string,\n      id: PropTypes.number,\n      leave: PropTypes.number,\n      location: PropTypes.string,\n      name: PropTypes.string,\n      nameAlertColor: PropTypes.string,\n      nameEmpty: PropTypes.string,\n      position: PropTypes.string,\n      wrongArrival: PropTypes.string,\n    });\n};\n","export const UPDATE_FORM = 'AUPDATE_FORM';\nexport const ALERT_FORM = 'ALERT_FORM';\nexport const ADD_INFO = 'ADD_INFO';\nexport const SORT_TABLE = 'SORT_TABLE';\nexport const CLEAR_FORM = 'CLEAR_FORM';\nexport const CHANGE_FORM = 'CHANGE_FORM';\n\nexport const updateForm = form => ({\n  type: UPDATE_FORM,\n  object: form.name,\n  value: form.value,\n});\n\nexport const alertForm = form => ({\n  type: ALERT_FORM,\n  nameEmpty: form.nameEmpty,\n  nameAlertColor: form.nameAlertColor,\n  wrongArrival: form.wrongArrival,\n  arrivalAlertColor: form.arrivalAlertColor,\n});\n\nexport const addInfo = info => ({\n  type: ADD_INFO,\n  info,\n});\n\nexport const sortTable = (sortCase, order) => ({\n  type: SORT_TABLE,\n  sortCase,\n  order,\n});\n\nexport const clearForm = () => ({\n  type: CLEAR_FORM,\n});\n\nexport const changeForm = form => ({\n  type: CHANGE_FORM,\n  name: form.name,\n  value: form.value,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps, formTypes } from './MapToProps';\n\nconst ConnectedForm = ({\n  formContents, addInfo, updateForm, alertForm, clearForm,\n}) => {\n  const {\n    name,\n    age,\n    gender,\n    department,\n    position,\n    arrival,\n    leave,\n    location,\n    nameEmpty,\n    wrongArrival,\n    nameAlertColor,\n    arrivalAlertColor,\n  } = formContents;\n\n  let { id } = formContents;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name === '') {\n      alertForm({\n        nameEmpty: 'Put in your Name',\n        nameAlertColor: 'red',\n        wrongArrival: '',\n        arrivalAlertColor: '',\n      });\n    } else if (arrival > leave) {\n      alertForm({\n        wrongArrival: 'Should be earlier than Leaving',\n        arrivalAlertColor: 'red',\n        nameEmpty: '',\n        nameAlertColor: '',\n      });\n    } else {\n      id += 1;\n      updateForm({ name: 'id', value: id });\n      addInfo({\n        id, name, age, gender, department, position, arrival, leave, location,\n      });\n      clearForm();\n    }\n  };\n\n  const handleChange = (event) => {\n    // eslint-disable-next-line no-shadow\n    const { name, type } = event.target;\n    let value;\n    // eslint-disable-next-line no-unused-expressions\n    type === 'number' ? value = parseInt(event.target.value, 10) : { value } = event.target;\n    updateForm({\n      name,\n      value,\n    });\n  };\n\n  const handleClear = (event) => {\n    event.preventDefault();\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <label htmlFor=\"name\" style={{ backgroundColor: nameAlertColor }}>\n        Name\n        <br />\n        {nameEmpty}\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={handleChange}\n          style={{ backgroundColor: nameAlertColor }}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"age\">\n        Age\n        <br />\n        <input\n          type=\"number\"\n          name=\"age\"\n          id=\"age\"\n          value={age}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"gender\"> {// eslint-disable-line\n        }\n        <br />\n        <select\n          id=\"gender\"\n          name=\"gender\"\n          onChange={handleChange}\n          value={gender}\n        >\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n      <label htmlFor=\"department\"> {// eslint-disable-line\n        }\n        Department\n        <br />\n        <select id=\"department\" name=\"department\" onChange={handleChange} value={department}>\n          <option value=\"Marketing\">Marketing</option>\n          <option value=\"Engineering\">Engineering</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n      <label htmlFor=\"position\"> {// eslint-disable-line\n      }\n        Position\n        <br />\n        <select id=\"position\" name=\"position\" onChange={handleChange} value={position}>\n          <option value=\"Director\">Director</option>\n          <option value=\"Manager\">Manager</option>\n          <option value=\"Chief\">Chief</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n      <label\n        htmlFor=\"arrival\"\n        style={{ backgroundColor: arrivalAlertColor }}\n      >\n        Arrival\n        <br />\n        {wrongArrival}\n        <input\n          type=\"number\"\n          id=\"arrival\"\n          name=\"arrival\"\n          value={arrival}\n          onChange={handleChange}\n          style={{ backgroundColor: arrivalAlertColor }}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"leave\">\n        Leaving\n        <br />\n        <input\n          type=\"number\"\n          id=\"leave\"\n          name=\"leave\"\n          value={leave}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"location\"> {// eslint-disable-line\n      }\n        Location\n        <br />\n        <select id=\"location\" name=\"location\" onChange={handleChange} value={location}>\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Osaka\">Osaka</option>\n          <option value=\"OverSeas\">OverSeas</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n      <button type=\"submit\" value=\"Send\">\n        Submit\n      </button>\n      <button type=\"button\" onClick={handleClear}>\n        Reset\n      </button>\n    </form>\n  );\n};\n\nConnectedForm.propTypes = {\n  addInfo: PropTypes.func.isRequired,\n  updateForm: PropTypes.func.isRequired,\n  alertForm: PropTypes.func.isRequired,\n  clearForm: PropTypes.func.isRequired,\n  formContents: PropTypes.shape(formTypes).isRequired,\n};\n\nconst Form = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mapStateToProps, mapDispatchToProps } from './MapToProps';\n\nconst ConnectedDataBase = ({\n  columns,\n  sortedInfo,\n  sortTable,\n}) => (\n  <table className=\"database\">\n    <tbody>\n      <tr key=\"ascStr\" style={{ border: 'none' }}>\n        {columns.map(state => (\n          <td key={`asc${state}`} style={{ border: 'none' }}>\n            <button type=\"button\" style={{ width: 40 }} onClick={() => sortTable(state, 'asc')}>\n            ↓\n            </button>\n            <br />\n            <button type=\"button\" style={{ width: 40 }} onClick={() => sortTable(state, 'desc')}>\n            ↑\n            </button>\n          </td>\n        ))}\n      </tr>\n      <tr key=\"columnStr\">\n        {columns.map(state => (\n          <th key={`columnsth${state}`}>{state}</th>\n        ))}\n      </tr>\n      {sortedInfo.map(state => (\n        <tr key={`tr${state.id}`}>\n          <td key={`id${state.id}`}>{state.id + 1}</td>\n          <td key={`name${state.id}`}>{state.name}</td>\n          <td key={`age${state.id}`}>{state.age}</td>\n          <td key={`gender${state.id}`}>{state.gender}</td>\n          <td key={`department${state.id}`}>{state.department}</td>\n          <td key={`position${state.id}`}>{state.position}</td>\n          <td key={`arrival${state.id}`}>{state.arrival}</td>\n          <td key={`leave${state.id}`}>{state.leave}</td>\n          <td key={`location${state.id}`}>{state.location}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nConnectedDataBase.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sortedInfo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTable: PropTypes.func.isRequired,\n};\n\nconst DataBase = connect(mapStateToProps, mapDispatchToProps)(ConnectedDataBase);\n\nexport default DataBase;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { mapStateToProps } from './MapToProps';\n\nconst ConnectedSearch = ({ info, searchForm }) => {\n  const sum = a => a.reduce((x, y) => x + y, 0);\n\n  const length = a => a.reduce(() => a.length, 0);\n\n  const filteredInfo = info.filter((value) => {\n    const searchKeys = Object.keys(searchForm);\n    for (let i = 0; i < Object.keys(searchForm).length; i += 1) {\n      if (searchForm[searchKeys[i]] !== 'all' && value[searchKeys[i]] !== searchForm[searchKeys[i]]) {\n        return false;\n      }\n    }\n    /* for (const key in searchForm) {\n      if (searchForm[key] !== 'all' && value[key] !== searchForm[key]) {\n        return false;\n      }\n    } */\n    return true;\n  });\n\n  const termFilterArray = filteredInfo.map(a => a.leave - a.arrival);\n\n  // 選択した部署の配列のposition要素の羅列\n  const lengthFilterArrayy = filteredInfo.map(a => a.position);\n  // 全員のLeave - arrivalの列挙\n  const termStayEach = info.map(a => a.leave - a.arrival);\n  // 全員の名前の列挙\n  const nameAll = info.map(a => a.name);\n  // 全員のLocationの列挙\n  const locationAll = info.map(a => a.location);\n  // 全員の配列の要素数\n  const lengthArrayAll = length(nameAll);\n  // 全員の平均勤続年数 = (全員のleave-arrivalの合計) / 該全員の配列の要素数\n  const termStayAverage = (sum(termStayEach) / lengthArrayAll)\n    ? (sum(termStayEach) / lengthArrayAll).toFixed(1) : 0;\n  // 全員の異動先毎の人数\n  const newLocationAll = () => {\n    const lengthOfTokyo = locationAll.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = locationAll.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = locationAll.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = locationAll.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n\n  // 該当者の配列の要素数\n  const lengthArrayFiltered = length(lengthFilterArrayy);\n  // 該当者の平均勤続年数 = (該当者のleave-arrivalの合計) / 該当者の配列の要素数\n  const termStayFiltered = (sum(termFilterArray) / lengthArrayFiltered)\n    ? (sum(termFilterArray) / lengthArrayFiltered).toFixed(1) : 0;\n\n  // 該当者の異動先の列挙\n  const newLocation = filteredInfo.map(a => a.location);\n  // 該当者の異動先毎の人数\n  const newLocationFiltered = () => {\n    const lengthOfTokyo = newLocation.filter(array => array === 'Tokyo').length;\n\n    const lengthOfOsaka = newLocation.filter(array => array === 'Osaka').length;\n\n    const lengthOfOverSeas = newLocation.filter(array => array === 'OverSeas').length;\n\n    const lengthOfOthers = newLocation.filter(array => array === 'Others').length;\n    return `東京: ${lengthOfTokyo}人\n            大阪: ${lengthOfOsaka}人\n            海外: ${lengthOfOverSeas}人\n            その他: ${lengthOfOthers}人`;\n  };\n\n  return (\n    <div className=\"searchresult\">\n      全人数 :\n      {' '}\n      {lengthArrayAll}\n      人\n      <br />\n      異動までの平均年数(全体) :\n      {' '}\n      {termStayAverage}\n      年\n      <br />\n      異動先(全体)\n      {' '}\n      {newLocationAll()}\n      <br />\n      <br />\n      該当者数 :\n      {' '}\n      {lengthArrayFiltered}\n      人\n      <br />\n      異動までの平均年数(該当者) :\n      {' '}\n      {termStayFiltered}\n      年\n      <br />\n      異動先(該当者)\n      {' '}\n      {newLocationFiltered()}\n      <br />\n    </div>\n  );\n};\n\nConnectedSearch.propTypes = {\n  info: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchForm: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nconst Search = connect(mapStateToProps)(ConnectedSearch);\n\nexport default Search;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Search from './Search';\nimport { mapStateToProps, mapDispatchToProps } from './MapToProps';\n\n\nconst ConnectedSearchForm = ({ searchForm, changeForm }) => {\n  const {\n    gender, department, position, location,\n  } = searchForm;\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    changeForm({\n      name,\n      value,\n    });\n  };\n\n  return (\n    <form className=\"searchform\">\n      <label htmlFor=\"gender\"> {// eslint-disable-line\n      }\n        Gender:\n        <select id=\"gender\" name=\"gender\" onChange={handleChange} value={gender}>\n          <option value=\"all\">All</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n      <label htmlFor=\"department\"> {// eslint-disable-line\n      }\n        Department:\n        <select id=\"department\" name=\"department\" onChange={handleChange} value={department}>\n          <option value=\"all\">All</option>\n          <option value=\"Marketing\">Marketing</option>\n          <option value=\"Engineering\">Engineering</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n\n      <label htmlFor=\"position\"> {// eslint-disable-line\n      }\n      Position:\n        <select id=\"position\" name=\"position\" onChange={handleChange} value={position}>\n          <option value=\"all\">All</option>\n          <option value=\"Director\">Director</option>\n          <option value=\"Manager\">Manager</option>\n          <option value=\"Chief\">Chief</option>\n          <option value=\"Others\">Others</option>\n        </select>\n      </label>\n      <br />\n\n       <label htmlFor=\"location\"> {// eslint-disable-line\n      }\n      Location:\n         <select id=\"location\" name=\"location\" onChange={handleChange} value={location}>\n           <option value=\"all\">All</option>\n           <option value=\"Tokyo\">Tokyo</option>\n           <option value=\"Osaka\">Osaka</option>\n           <option value=\"OverSeas\">OverSeas</option>\n           <option value=\"Others\">Others</option>\n         </select>\n       </label>\n      <br />\n      <br />\n      <br />\n      <Search\n        gender={gender}\n        department={department}\n        position={position}\n        location={location}\n      />\n      <br />\n    </form>\n  );\n};\n\nConnectedSearchForm.propTypes = {\n  searchForm: PropTypes.objectOf(PropTypes.string).isRequired,\n  changeForm: PropTypes.func.isRequired,\n};\n\nconst SearchForm = connect(mapStateToProps, mapDispatchToProps)(ConnectedSearchForm);\n\nexport default SearchForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageContents = () => (\n  <div className=\"pagecontents\">\n    <br />\n    <p>\n      <Link to=\"/search/\">情報検索</Link>\n      から条件を指定して異動状況を確認できます。\n    </p>\n    <p>\n      <Link to=\"/database/\">データベース</Link>\n      で全てのリストが確認できます。\n    </p>\n    <br />\n    <br />\n    <br />\n    <p>\n    ※情報入力をされていない方は\n      <Link to=\"/form/\">情報入力ページ</Link>\n      から入力お願いします。\n    </p>\n    <br />\n  </div>\n);\n\nexport default PageContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinkButton = ({ buttonName }) => (\n  <button className=\"link-button\" type=\"button\">\n    {buttonName}\n  </button>\n);\n\nLinkButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n};\n\nexport default LinkButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LinkButton from './LinkButton';\n\nconst Topbar = () => (\n  <div className=\"topbar\">\n    <h3>社員データ</h3>\n    <Link to={`${process.env.PUBLIC_URL}/`}>\n      <LinkButton buttonName=\"トップ\" />\n    </Link>\n    <Link to=\"transfer/form/\">\n      <LinkButton buttonName=\"情報入力\" />\n    </Link>\n    <Link to=\"transfer/search/\">\n      <LinkButton buttonName=\"情報検索\" />\n    </Link>\n    <Link to={`${process.env.PUBLIC_URL}/database`}>\n      <LinkButton buttonName=\"登録データ\" />\n    </Link>\n  </div>\n);\n\nexport default Topbar;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Form from './components/Form';\nimport DataBase from './components/Database';\nimport SearchForm from './components/Searchform';\nimport PageContents from './components/PageContents';\nimport Topbar from './components/Topbar';\nimport './App.css';\n\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"main-page\">\n      <Topbar />\n\n      <Route path={`${process.env.PUBLIC_URL}/`} exact component={PageContents} />\n      <Route path=\"transfer/form\" component={Form} />\n      <Route path=\"transfer/search\" component={SearchForm} />\n      <Route path={`${process.env.PUBLIC_URL}/`} component={DataBase} />\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n  ADD_INFO, SORT_TABLE, UPDATE_FORM, CLEAR_FORM, ALERT_FORM, CHANGE_FORM,\n} from '../actions/action';\n\nconst initialState = {\n  searchForm: {\n    gender: 'all',\n    department: 'all',\n    position: 'all',\n    location: 'all',\n  },\n  formContents:\n    {\n      id: 4,\n      name: '',\n      age: 30,\n      arrival: 2010,\n      leave: 2010,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Director',\n      location: 'Tokyo',\n      nameEmpty: '',\n      nameAlertColor: '',\n      wrongArrival: '',\n      arrivalAlertColor: '',\n    },\n  columns: ['ID', 'Name', 'Age', 'Gender', 'Department', 'Position', 'Arrival', 'Leave', 'Location'],\n  info: [\n    {\n      id: 0,\n      name: 'Tom',\n      age: 42,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Manager',\n      arrival: 2015,\n      leave: 2017,\n      location: 'Tokyo',\n    },\n    {\n      id: 1,\n      name: 'Bob',\n      age: 33,\n      gender: 'Male',\n      department: 'Marketing',\n      position: 'Chief',\n      arrival: 2013,\n      leave: 2019,\n      location: 'Osaka',\n    },\n    {\n      id: 2,\n      name: 'Josephine',\n      age: 45,\n      gender: 'Female',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2015,\n      leave: 2020,\n      location: 'OverSeas',\n    },\n    {\n      id: 3,\n      name: 'Linda',\n      age: 49,\n      gender: 'Others',\n      department: 'Others',\n      position: 'Director',\n      arrival: 2015,\n      leave: 2022,\n      location: 'Others',\n    },\n    {\n      id: 4,\n      name: 'Taro',\n      age: 22,\n      gender: 'Others',\n      department: 'Engineering',\n      position: 'Others',\n      arrival: 2018,\n      leave: 2029,\n      location: 'Osaka',\n    },\n  ],\n};\n\nconst updateForm = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_FORM:\n      return {\n        ...state,\n        formContents: {\n          ...state.formContents,\n          [action.object]: action.value,\n        },\n      };\n    case ALERT_FORM:\n      return {\n        ...state,\n        formContents: {\n          ...state.formContents,\n          nameEmpty: action.nameEmpty,\n          nameAlertColor: action.nameAlertColor,\n          wrongArrival: action.wrongArrival,\n          arrivalAlertColor: action.arrivalAlertColor,\n        },\n      };\n    case CLEAR_FORM:\n      return {\n        ...state,\n        formContents: {\n          ...state.formContents,\n          name: '',\n          age: 30,\n          arrival: 2010,\n          leave: 2010,\n          gender: 'Male',\n          department: 'Marketing',\n          position: 'Director',\n          location: 'Tokyo',\n          nameEmpty: '',\n          nameAlertColor: '',\n          wrongArrival: '',\n          arrivalAlertColor: '',\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nconst addInfo = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_INFO:\n      return {\n        ...state,\n        info: [\n          ...state.info,\n          action.info,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nconst sortTable = (state = { sortCase: 'ID', order: 'asc' }, action) => {\n  switch (action.type) {\n    case SORT_TABLE:\n      return {\n        ...state.sortTable,\n        sortCase: action.sortCase,\n        order: action.order,\n      };\n    default:\n      return state;\n  }\n};\n\nconst searchForm = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_FORM:\n      return {\n        ...state,\n        searchForm: {\n          ...state.searchForm,\n          [action.name]: action.value,\n        },\n\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst rootReducer = combineReducers({\n  addInfo,\n  updateForm,\n  sortTable,\n  searchForm,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/reducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/store';\n\nwindow.store = store;\nstore.subscribe(() => console.log(store.getState().searchForm.searchForm));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}